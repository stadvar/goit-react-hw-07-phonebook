{"version":3,"sources":["redux/actions.js","redux/operations.js","redux/selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/App/App.jsx","redux/reducers.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","axios","defaults","baseURL","getContactsItems","state","contacts","items","getContactList","createSelector","filter","normalizedFilter","toLowerCase","contact","name","includes","ContactList","dispatch","useDispatch","useSelector","useEffect","actions","get","then","data","catch","error","message","className","map","number","id","type","onClick","delete","deleteContact","ContactForm","useState","setName","setNumber","handleInputChange","e","currentTarget","value","onSubmit","preventDefault","trim","existContact","find","isContsctExist","alert","post","onChange","Filter","event","target","App","getContactsError","isLoading","loading","getContactsLoading","itemContactReducer","createReducer","payload","action","filtered","el","filterContactReducer","loadingContactReducer","errotContactReducer","combineReducers","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a84fde68.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\nexport const addContactsError = createAction('contacts/addContactsError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const filterContact = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport * as actions from './actions';\n\naxios.defaults.baseURL = 'http://localhost:3004';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(actions.fetchContactsRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\n    .catch(error => dispatch(actions.fetchContactsError(error.message)));\n};\n\nexport const addContact = data => dispatch => {\n  dispatch(actions.addContactsRequest());\n  axios\n    .post('/contacts', data)\n    .then(({ data }) => dispatch(actions.addContactsSuccess(data)))\n    .catch(error => dispatch(actions.addContactsError(error.message)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(actions.deleteContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(actions.deleteContactSuccess(id)))\n    .catch(error => dispatch(actions.deleteContactError(error.message)));\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContactsItems = state => state.contacts.items;\nexport const getContactsFilter = state => state.contacts.filter;\nexport const getContactsError = state => state.contacts.error;\nexport const getContactsLoading = state => state.contacts.loading;\n\nexport const getContactList = createSelector(\n  [getContactsItems, getContactsFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, fetchContacts } from '../../redux/operations';\nimport { getContactList } from '../../redux/selectors';\nimport './ContactList.css';\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContactList);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    //eslint-disable-next-line\n  }, []);\n\n  return (\n    <table className=\"List-table\">\n      <tbody>\n        {contacts.map(({ name, number, id }) => (\n          <tr key={id}>\n            <td>{name}</td>\n            <td>{number}</td>\n            <td>\n              <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n                del\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\nexport default ContactList;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport { getContactsItems } from '../../redux/selectors';\nimport './ContactForm.css';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const contacts = useSelector(state => getContactsItems(state));\n\n  const isContsctExist = () => {\n    const normalizedFilter = name.toLowerCase();\n    return contacts.find(\n      contact => contact.name.toLowerCase() === normalizedFilter,\n    );\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name.trim() === '' || number.trim() === '') {\n      alert('Fill all fields!');\n      return;\n    }\n    const existContact = isContsctExist();\n    if (existContact) {\n      alert(`${existContact.name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className=\"Form\" onSubmit={handleSubmit}>\n      <label className=\"Form-label\">\n        Name\n        <input\n          className=\"Form-input\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n        />\n      </label>\n      <label className=\"Form-label\">\n        Number\n        <input\n          className=\"Form-input\"\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/actions';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilter = event => dispatch(filterContact(event.target.value));\n\n  return (\n    <label>\n      <input type=\"text\" name=\"filter\" onChange={onFilter} />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useSelector } from 'react-redux';\nimport './App.css';\nimport ContactList from '../ContactList/ContactList';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport { getContactsError, getContactsLoading } from '../../redux/selectors';\n\nfunction App() {\n  const error = useSelector(state => getContactsError(state));\n  const isLoading = useSelector(state => getContactsLoading(state));\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <p className=\"App-find\">Find contacts by name</p>\n      <Filter />\n      {isLoading && <p>{' Loading... '}</p>}\n      {error && <p>{' Sorry, something goes wrong: ' + error}</p>}\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\n\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContact,\n} from './actions';\n\nconst itemContactReducer = createReducer([], {\n  [fetchContactsSuccess.type]: (state, actions) => actions.payload,\n  [addContactsSuccess.type]: (state, action) => [...state, action.payload],\n  [deleteContactSuccess.type]: (state, action) => {\n    const filtered = state.filter(el => el.id !== action.payload);\n    return [...filtered];\n  },\n});\n\nconst filterContactReducer = createReducer('', {\n  [filterContact.type]: (state, action) => action.payload,\n});\n\nconst loadingContactReducer = createReducer(false, {\n  [fetchContactsRequest.type]: () => true,\n  [fetchContactsSuccess.type]: () => false,\n  [fetchContactsError.type]: () => false,\n  [addContactsRequest.type]: () => true,\n  [addContactsSuccess.type]: () => false,\n  [addContactsError.type]: () => false,\n  [deleteContactRequest.type]: () => true,\n  [deleteContactSuccess.type]: () => false,\n  [deleteContactError.type]: () => false,\n});\n\nconst errotContactReducer = createReducer('', {\n  [fetchContactsError.type]: (state, action) => action.payload,\n  [addContactsError.type]: (state, action) => action.payload,\n  [deleteContactError.type]: (state, action) => action.payload,\n  [fetchContactsRequest.type]: () => '',\n  [addContactsRequest.type]: () => '',\n  [deleteContactRequest.type]: () => '',\n});\n\nexport default combineReducers({\n  items: itemContactReducer,\n  filter: filterContactReducer,\n  loading: loadingContactReducer,\n  error: errotContactReducer,\n});\n","import { configureStore /*getDefaultMiddleware*/ } from '@reduxjs/toolkit';\n// import {\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from 'redux-persist';\n\nimport contactReducer from './reducers';\n\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n// ];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n  // middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './components/App/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}